{"version":3,"sources":["initial-data.js","task.js","column.js","index.js"],"names":["initialData","tasks","task-1","id","content","task-2","task-3","task-4","columns","column-1","title","taskIds","column-2","column-3","columnOrder","Container","styled","div","_templateObject","props","isDragging","Task","_this","this","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","task","index","provided","snapshot","Object","assign","draggableProps","dragHandleProps","ref","innerRef","Component","column_templateObject","Title","h3","_templateObject2","TaskList","_templateObject3","isDraggingOver","Column","column_Container","column","droppableId","droppableProps","map","task_Task","key","placeholder","React","document","body","style","backgroundColor","src_templateObject","App","state","onDragEnd","result","_objectSpread3","destination","source","start","finish","newTaskIds","Array","from","splice","newColumn","objectSpread","newState","defineProperty","setState","startTaskIds","newStart","finishTaskIds","newFinish","_this2","src_Container","columnId","taskId","column_Column","ReactDOM","render","src_App","className","getElementById"],"mappings":"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","file":"static/js/main.5e0458ff.chunk.js","sourcesContent":["const initialData = {\r\n    tasks: {\r\n        'task-1': {id: 'task-1', content: 'Take out the garbage'},\r\n        'task-2': {id: 'task-2', content: 'Watch my favorite show'},\r\n        'task-3': {id: 'task-3', content: 'Charge my phone'},\r\n        'task-4': {id: 'task-4', content: 'Cook dinner'}\r\n    },\r\n    columns: {\r\n        'column-1': {\r\n            id: 'column-1',\r\n            title: 'To do',\r\n            taskIds: ['task-1', 'task-2', 'task-3', 'task-4']\r\n        },\r\n        'column-2': {\r\n            id: 'column-2',\r\n            title: 'In progress',\r\n            taskIds: []\r\n        },\r\n        'column-3': {\r\n            id: 'column-3',\r\n            title: 'Done',\r\n            taskIds: []\r\n        },\r\n    },\r\n    columnOrder: ['column-1','column-2','column-3'],\r\n};\r\n\r\nexport default initialData;","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nconst Container = styled.div`\r\n    margin: 0px;\r\n    border: 1px solid ${props => (props.isDragging ? '#094074' : 'lightgray')};\r\n    border-radius: 5px;\r\n    padding: 8px;\r\n    margin-bottom: 8px;\r\n    background-color: ${props => (props.isDragging ? '#A5D328' : 'white')};\r\n    color: ${props => (props.isDragging ? '#FFFFFC' : 'black')};\r\n    box-shadow: 0 0 10px rgba(0,0,0,${props => (props.isDragging ? '0.5' : '0')});\r\n`;\r\n\r\nexport default class Task extends Component {\r\n    render() {\r\n        return (\r\n            <Draggable\r\n                draggableId={this.props.task.id}\r\n                index={this.props.index}\r\n            >\r\n                {(provided, snapshot) => (\r\n                    <Container\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isDragging={snapshot.isDragging}\r\n                    >\r\n                        {this.props.task.content}\r\n                    </Container>\r\n                )}\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport Task from './task';\r\n\r\nconst Container = styled.div`   \r\n    margin: 8px;\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n    width: 220px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: #6C756B;\r\n    background-color: #F2F4FF;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    margin: 0px;\r\n    padding: 8px;\r\n    background-color: #094074;\r\n    color: #F2F4FF;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n    padding: 8px;\r\n    background-color: ${props => (props.isDraggingOver ? '#EEFFB7' : 'white')};\r\n    flex-grow: 1;\r\n    min-height: 100px;\r\n`;\r\n\r\nexport default class Column extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Title>{this.props.column.title}</Title>\r\n                <Droppable\r\n                droppableId={this.props.column.id}\r\n                >\r\n                    {(provided, snapshot) => (\r\n                        <TaskList\r\n                        ref={provided.innerRef}\r\n                        isDraggingOver={snapshot.isDraggingOver}\r\n                        {...provided.droppableProps}\r\n                        >\r\n                        {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\r\n                        {provided.placeholder}\r\n                        </TaskList>\r\n                    )}\r\n                </Droppable>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from './initial-data';\nimport Column from './column';\n\ndocument.body.style.backgroundColor = '#D0E0EF'\n\nconst Container = styled.div`\n    display: flex;\n`\n\nclass App extends React.Component {\n    state = initialData;\n\n    onDragEnd = result => {\n\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        if(start === finish) {\n            const newTaskIds = Array.from(start.taskIds);\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n    \n            const newColumn = {\n                ...start,\n                taskIds: newTaskIds\n            }\n    \n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn,\n                }\n            }\n    \n            this.setState(newState);\n        }\n\n        const startTaskIds = Array.from(start.taskIds);\n        startTaskIds.splice(source.index,1);\n        const newStart = {\n            ...start,\n            taskIds: startTaskIds,\n        };\n        \n        const finishTaskIds = Array.from(finish.taskIds);\n        finishTaskIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            taskIds: finishTaskIds\n        }\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            }\n        }\n\n        this.setState(newState);\n    }\n\n    render() {\n        return (\n            <DragDropContext\n                onDragEnd={this.onDragEnd}\n            >\n                <Container>\n                    {this.state.columnOrder.map((columnId) => {\n                        const column = this.state.columns[columnId];\n                        const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                        return <Column key={column.id} column={column} tasks={tasks} />\n                    })}\n                </Container>\n            </DragDropContext>\n        )\n    }\n}\n\nReactDOM.render(<App className='app' />, document.getElementById('root'));\n"],"sourceRoot":""}